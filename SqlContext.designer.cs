#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocialSports
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SocialSports")]
	public partial class SqlContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblNflSchedule(tblNflSchedule instance);
    partial void UpdatetblNflSchedule(tblNflSchedule instance);
    partial void DeletetblNflSchedule(tblNflSchedule instance);
    partial void InserttblNflTeam(tblNflTeam instance);
    partial void UpdatetblNflTeam(tblNflTeam instance);
    partial void DeletetblNflTeam(tblNflTeam instance);
    partial void InserttblSportsType(tblSportsType instance);
    partial void UpdatetblSportsType(tblSportsType instance);
    partial void DeletetblSportsType(tblSportsType instance);
    partial void InserttblUsersFavoriteNflTeam(tblUsersFavoriteNflTeam instance);
    partial void UpdatetblUsersFavoriteNflTeam(tblUsersFavoriteNflTeam instance);
    partial void DeletetblUsersFavoriteNflTeam(tblUsersFavoriteNflTeam instance);
    partial void InserttblNflStatisticalCategoryType(tblNflStatisticalCategoryType instance);
    partial void UpdatetblNflStatisticalCategoryType(tblNflStatisticalCategoryType instance);
    partial void DeletetblNflStatisticalCategoryType(tblNflStatisticalCategoryType instance);
    partial void InserttblNflPlayer(tblNflPlayer instance);
    partial void UpdatetblNflPlayer(tblNflPlayer instance);
    partial void DeletetblNflPlayer(tblNflPlayer instance);
    partial void InserttblUserTreeViewItem(tblUserTreeViewItem instance);
    partial void UpdatetblUserTreeViewItem(tblUserTreeViewItem instance);
    partial void DeletetblUserTreeViewItem(tblUserTreeViewItem instance);
    partial void InserttblCredentialsRecovery(tblCredentialsRecovery instance);
    partial void UpdatetblCredentialsRecovery(tblCredentialsRecovery instance);
    partial void DeletetblCredentialsRecovery(tblCredentialsRecovery instance);
    partial void InserttblUsersPaymentInformation(tblUsersPaymentInformation instance);
    partial void UpdatetblUsersPaymentInformation(tblUsersPaymentInformation instance);
    partial void DeletetblUsersPaymentInformation(tblUsersPaymentInformation instance);
    partial void InserttblLinkUsersToBet(tblLinkUsersToBet instance);
    partial void UpdatetblLinkUsersToBet(tblLinkUsersToBet instance);
    partial void DeletetblLinkUsersToBet(tblLinkUsersToBet instance);
    partial void InserttblBetHistory(tblBetHistory instance);
    partial void UpdatetblBetHistory(tblBetHistory instance);
    partial void DeletetblBetHistory(tblBetHistory instance);
    partial void InserttblParentBulletinBoard(tblParentBulletinBoard instance);
    partial void UpdatetblParentBulletinBoard(tblParentBulletinBoard instance);
    partial void DeletetblParentBulletinBoard(tblParentBulletinBoard instance);
    partial void InserttblChildBulletinBoard(tblChildBulletinBoard instance);
    partial void UpdatetblChildBulletinBoard(tblChildBulletinBoard instance);
    partial void DeletetblChildBulletinBoard(tblChildBulletinBoard instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblTeamStatsActualResult(tblTeamStatsActualResult instance);
    partial void UpdatetblTeamStatsActualResult(tblTeamStatsActualResult instance);
    partial void DeletetblTeamStatsActualResult(tblTeamStatsActualResult instance);
    partial void InserttblBetApproval(tblBetApproval instance);
    partial void UpdatetblBetApproval(tblBetApproval instance);
    partial void DeletetblBetApproval(tblBetApproval instance);
    partial void InserttblPlayerBet(tblPlayerBet instance);
    partial void UpdatetblPlayerBet(tblPlayerBet instance);
    partial void DeletetblPlayerBet(tblPlayerBet instance);
    partial void InserttblTeamBet(tblTeamBet instance);
    partial void UpdatetblTeamBet(tblTeamBet instance);
    partial void DeletetblTeamBet(tblTeamBet instance);
    partial void InserttblUsersBettingStatistic(tblUsersBettingStatistic instance);
    partial void UpdatetblUsersBettingStatistic(tblUsersBettingStatistic instance);
    partial void DeletetblUsersBettingStatistic(tblUsersBettingStatistic instance);
    partial void InserttblStatsBetSearchQuery(tblStatsBetSearchQuery instance);
    partial void UpdatetblStatsBetSearchQuery(tblStatsBetSearchQuery instance);
    partial void DeletetblStatsBetSearchQuery(tblStatsBetSearchQuery instance);
    partial void InserttblStatsPageVisit(tblStatsPageVisit instance);
    partial void UpdatetblStatsPageVisit(tblStatsPageVisit instance);
    partial void DeletetblStatsPageVisit(tblStatsPageVisit instance);
    #endregion
		
		public SqlContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SocialSportsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SqlContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SqlContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblNflSchedule> tblNflSchedules
		{
			get
			{
				return this.GetTable<tblNflSchedule>();
			}
		}
		
		public System.Data.Linq.Table<tblNflTeam> tblNflTeams
		{
			get
			{
				return this.GetTable<tblNflTeam>();
			}
		}
		
		public System.Data.Linq.Table<tblSportsType> tblSportsTypes
		{
			get
			{
				return this.GetTable<tblSportsType>();
			}
		}
		
		public System.Data.Linq.Table<tblUsersFavoriteNflTeam> tblUsersFavoriteNflTeams
		{
			get
			{
				return this.GetTable<tblUsersFavoriteNflTeam>();
			}
		}
		
		public System.Data.Linq.Table<tblNflStatisticalCategoryType> tblNflStatisticalCategoryTypes
		{
			get
			{
				return this.GetTable<tblNflStatisticalCategoryType>();
			}
		}
		
		public System.Data.Linq.Table<tblNflPlayer> tblNflPlayers
		{
			get
			{
				return this.GetTable<tblNflPlayer>();
			}
		}
		
		public System.Data.Linq.Table<tblNflStatisticalCategoryTypesOffensivePlayer> tblNflStatisticalCategoryTypesOffensivePlayers
		{
			get
			{
				return this.GetTable<tblNflStatisticalCategoryTypesOffensivePlayer>();
			}
		}
		
		public System.Data.Linq.Table<tblNflStatisticalCategoryTypesDefensivePlayer> tblNflStatisticalCategoryTypesDefensivePlayers
		{
			get
			{
				return this.GetTable<tblNflStatisticalCategoryTypesDefensivePlayer>();
			}
		}
		
		public System.Data.Linq.Table<tblUserTreeViewItem> tblUserTreeViewItems
		{
			get
			{
				return this.GetTable<tblUserTreeViewItem>();
			}
		}
		
		public System.Data.Linq.Table<tblCredentialsRecovery> tblCredentialsRecoveries
		{
			get
			{
				return this.GetTable<tblCredentialsRecovery>();
			}
		}
		
		public System.Data.Linq.Table<tblUsersPaymentInformation> tblUsersPaymentInformations
		{
			get
			{
				return this.GetTable<tblUsersPaymentInformation>();
			}
		}
		
		public System.Data.Linq.Table<tblLinkUsersToBet> tblLinkUsersToBets
		{
			get
			{
				return this.GetTable<tblLinkUsersToBet>();
			}
		}
		
		public System.Data.Linq.Table<tblBetHistory> tblBetHistories
		{
			get
			{
				return this.GetTable<tblBetHistory>();
			}
		}
		
		public System.Data.Linq.Table<tblParentBulletinBoard> tblParentBulletinBoards
		{
			get
			{
				return this.GetTable<tblParentBulletinBoard>();
			}
		}
		
		public System.Data.Linq.Table<tblChildBulletinBoard> tblChildBulletinBoards
		{
			get
			{
				return this.GetTable<tblChildBulletinBoard>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblTeamStatsActualResult> tblTeamStatsActualResults
		{
			get
			{
				return this.GetTable<tblTeamStatsActualResult>();
			}
		}
		
		public System.Data.Linq.Table<tblBetApproval> tblBetApprovals
		{
			get
			{
				return this.GetTable<tblBetApproval>();
			}
		}
		
		public System.Data.Linq.Table<tblPlayerBet> tblPlayerBets
		{
			get
			{
				return this.GetTable<tblPlayerBet>();
			}
		}
		
		public System.Data.Linq.Table<tblTeamBet> tblTeamBets
		{
			get
			{
				return this.GetTable<tblTeamBet>();
			}
		}
		
		public System.Data.Linq.Table<tblUsersBettingStatistic> tblUsersBettingStatistics
		{
			get
			{
				return this.GetTable<tblUsersBettingStatistic>();
			}
		}
		
		public System.Data.Linq.Table<tblStatsBetSearchQuery> tblStatsBetSearchQueries
		{
			get
			{
				return this.GetTable<tblStatsBetSearchQuery>();
			}
		}
		
		public System.Data.Linq.Table<tblStatsPageVisit> tblStatsPageVisits
		{
			get
			{
				return this.GetTable<tblStatsPageVisit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNflSchedule")]
	public partial class tblNflSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NflGameId;
		
		private string _fkHomeTeam;
		
		private string _fkVisitorTeam;
		
		private System.DateTime _datDateOfGame;
		
		private int _intWeekNumber;
		
		private bool _blnIsBuy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNflGameIdChanging(int value);
    partial void OnNflGameIdChanged();
    partial void OnfkHomeTeamChanging(string value);
    partial void OnfkHomeTeamChanged();
    partial void OnfkVisitorTeamChanging(string value);
    partial void OnfkVisitorTeamChanged();
    partial void OndatDateOfGameChanging(System.DateTime value);
    partial void OndatDateOfGameChanged();
    partial void OnintWeekNumberChanging(int value);
    partial void OnintWeekNumberChanged();
    partial void OnblnIsBuyChanging(bool value);
    partial void OnblnIsBuyChanged();
    #endregion
		
		public tblNflSchedule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NflGameId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NflGameId
		{
			get
			{
				return this._NflGameId;
			}
			set
			{
				if ((this._NflGameId != value))
				{
					this.OnNflGameIdChanging(value);
					this.SendPropertyChanging();
					this._NflGameId = value;
					this.SendPropertyChanged("NflGameId");
					this.OnNflGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkHomeTeam", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string fkHomeTeam
		{
			get
			{
				return this._fkHomeTeam;
			}
			set
			{
				if ((this._fkHomeTeam != value))
				{
					this.OnfkHomeTeamChanging(value);
					this.SendPropertyChanging();
					this._fkHomeTeam = value;
					this.SendPropertyChanged("fkHomeTeam");
					this.OnfkHomeTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkVisitorTeam", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string fkVisitorTeam
		{
			get
			{
				return this._fkVisitorTeam;
			}
			set
			{
				if ((this._fkVisitorTeam != value))
				{
					this.OnfkVisitorTeamChanging(value);
					this.SendPropertyChanging();
					this._fkVisitorTeam = value;
					this.SendPropertyChanged("fkVisitorTeam");
					this.OnfkVisitorTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateOfGame", DbType="Date NOT NULL")]
		public System.DateTime datDateOfGame
		{
			get
			{
				return this._datDateOfGame;
			}
			set
			{
				if ((this._datDateOfGame != value))
				{
					this.OndatDateOfGameChanging(value);
					this.SendPropertyChanging();
					this._datDateOfGame = value;
					this.SendPropertyChanged("datDateOfGame");
					this.OndatDateOfGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intWeekNumber", DbType="Int NOT NULL")]
		public int intWeekNumber
		{
			get
			{
				return this._intWeekNumber;
			}
			set
			{
				if ((this._intWeekNumber != value))
				{
					this.OnintWeekNumberChanging(value);
					this.SendPropertyChanging();
					this._intWeekNumber = value;
					this.SendPropertyChanged("intWeekNumber");
					this.OnintWeekNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnIsBuy", DbType="Bit NOT NULL")]
		public bool blnIsBuy
		{
			get
			{
				return this._blnIsBuy;
			}
			set
			{
				if ((this._blnIsBuy != value))
				{
					this.OnblnIsBuyChanging(value);
					this.SendPropertyChanging();
					this._blnIsBuy = value;
					this.SendPropertyChanged("blnIsBuy");
					this.OnblnIsBuyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNflTeams")]
	public partial class tblNflTeam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkTeamId;
		
		private bool _blnIsAFC;
		
		private string _strTeamName;
		
		private string _strTeamField;
		
		private string _strTeamImage;
		
		private string _strTeamConference;
		
		private EntitySet<tblUsersFavoriteNflTeam> _tblUsersFavoriteNflTeams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkTeamIdChanging(int value);
    partial void OnpkTeamIdChanged();
    partial void OnblnIsAFCChanging(bool value);
    partial void OnblnIsAFCChanged();
    partial void OnstrTeamNameChanging(string value);
    partial void OnstrTeamNameChanged();
    partial void OnstrTeamFieldChanging(string value);
    partial void OnstrTeamFieldChanged();
    partial void OnstrTeamImageChanging(string value);
    partial void OnstrTeamImageChanged();
    partial void OnstrTeamConferenceChanging(string value);
    partial void OnstrTeamConferenceChanged();
    #endregion
		
		public tblNflTeam()
		{
			this._tblUsersFavoriteNflTeams = new EntitySet<tblUsersFavoriteNflTeam>(new Action<tblUsersFavoriteNflTeam>(this.attach_tblUsersFavoriteNflTeams), new Action<tblUsersFavoriteNflTeam>(this.detach_tblUsersFavoriteNflTeams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkTeamId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkTeamId
		{
			get
			{
				return this._pkTeamId;
			}
			set
			{
				if ((this._pkTeamId != value))
				{
					this.OnpkTeamIdChanging(value);
					this.SendPropertyChanging();
					this._pkTeamId = value;
					this.SendPropertyChanged("pkTeamId");
					this.OnpkTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnIsAFC", DbType="Bit NOT NULL")]
		public bool blnIsAFC
		{
			get
			{
				return this._blnIsAFC;
			}
			set
			{
				if ((this._blnIsAFC != value))
				{
					this.OnblnIsAFCChanging(value);
					this.SendPropertyChanging();
					this._blnIsAFC = value;
					this.SendPropertyChanged("blnIsAFC");
					this.OnblnIsAFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTeamName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strTeamName
		{
			get
			{
				return this._strTeamName;
			}
			set
			{
				if ((this._strTeamName != value))
				{
					this.OnstrTeamNameChanging(value);
					this.SendPropertyChanging();
					this._strTeamName = value;
					this.SendPropertyChanged("strTeamName");
					this.OnstrTeamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTeamField", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strTeamField
		{
			get
			{
				return this._strTeamField;
			}
			set
			{
				if ((this._strTeamField != value))
				{
					this.OnstrTeamFieldChanging(value);
					this.SendPropertyChanging();
					this._strTeamField = value;
					this.SendPropertyChanged("strTeamField");
					this.OnstrTeamFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTeamImage", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strTeamImage
		{
			get
			{
				return this._strTeamImage;
			}
			set
			{
				if ((this._strTeamImage != value))
				{
					this.OnstrTeamImageChanging(value);
					this.SendPropertyChanging();
					this._strTeamImage = value;
					this.SendPropertyChanged("strTeamImage");
					this.OnstrTeamImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTeamConference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strTeamConference
		{
			get
			{
				return this._strTeamConference;
			}
			set
			{
				if ((this._strTeamConference != value))
				{
					this.OnstrTeamConferenceChanging(value);
					this.SendPropertyChanging();
					this._strTeamConference = value;
					this.SendPropertyChanged("strTeamConference");
					this.OnstrTeamConferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblNflTeam_tblUsersFavoriteNflTeam", Storage="_tblUsersFavoriteNflTeams", ThisKey="pkTeamId", OtherKey="fkSportsTeam")]
		public EntitySet<tblUsersFavoriteNflTeam> tblUsersFavoriteNflTeams
		{
			get
			{
				return this._tblUsersFavoriteNflTeams;
			}
			set
			{
				this._tblUsersFavoriteNflTeams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsersFavoriteNflTeams(tblUsersFavoriteNflTeam entity)
		{
			this.SendPropertyChanging();
			entity.tblNflTeam = this;
		}
		
		private void detach_tblUsersFavoriteNflTeams(tblUsersFavoriteNflTeam entity)
		{
			this.SendPropertyChanging();
			entity.tblNflTeam = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSportsTypes")]
	public partial class tblSportsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkSportsTypeId;
		
		private string _strSportsName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkSportsTypeIdChanging(int value);
    partial void OnpkSportsTypeIdChanged();
    partial void OnstrSportsNameChanging(string value);
    partial void OnstrSportsNameChanged();
    #endregion
		
		public tblSportsType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkSportsTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkSportsTypeId
		{
			get
			{
				return this._pkSportsTypeId;
			}
			set
			{
				if ((this._pkSportsTypeId != value))
				{
					this.OnpkSportsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._pkSportsTypeId = value;
					this.SendPropertyChanged("pkSportsTypeId");
					this.OnpkSportsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSportsName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strSportsName
		{
			get
			{
				return this._strSportsName;
			}
			set
			{
				if ((this._strSportsName != value))
				{
					this.OnstrSportsNameChanging(value);
					this.SendPropertyChanging();
					this._strSportsName = value;
					this.SendPropertyChanged("strSportsName");
					this.OnstrSportsNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsersFavoriteNflTeams")]
	public partial class tblUsersFavoriteNflTeam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkSportsFavoriteTeamId;
		
		private int _fkUserId;
		
		private int _fkSportsTeam;
		
		private System.Nullable<System.DateTime> _datDate;
		
		private EntityRef<tblNflTeam> _tblNflTeam;
		
		private EntityRef<tblUser> _tblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkSportsFavoriteTeamIdChanging(int value);
    partial void OnpkSportsFavoriteTeamIdChanged();
    partial void OnfkUserIdChanging(int value);
    partial void OnfkUserIdChanged();
    partial void OnfkSportsTeamChanging(int value);
    partial void OnfkSportsTeamChanged();
    partial void OndatDateChanging(System.Nullable<System.DateTime> value);
    partial void OndatDateChanged();
    #endregion
		
		public tblUsersFavoriteNflTeam()
		{
			this._tblNflTeam = default(EntityRef<tblNflTeam>);
			this._tblUser = default(EntityRef<tblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkSportsFavoriteTeamId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkSportsFavoriteTeamId
		{
			get
			{
				return this._pkSportsFavoriteTeamId;
			}
			set
			{
				if ((this._pkSportsFavoriteTeamId != value))
				{
					this.OnpkSportsFavoriteTeamIdChanging(value);
					this.SendPropertyChanging();
					this._pkSportsFavoriteTeamId = value;
					this.SendPropertyChanged("pkSportsFavoriteTeamId");
					this.OnpkSportsFavoriteTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserId", DbType="Int NOT NULL")]
		public int fkUserId
		{
			get
			{
				return this._fkUserId;
			}
			set
			{
				if ((this._fkUserId != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkUserId = value;
					this.SendPropertyChanged("fkUserId");
					this.OnfkUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkSportsTeam", DbType="Int NOT NULL")]
		public int fkSportsTeam
		{
			get
			{
				return this._fkSportsTeam;
			}
			set
			{
				if ((this._fkSportsTeam != value))
				{
					if (this._tblNflTeam.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkSportsTeamChanging(value);
					this.SendPropertyChanging();
					this._fkSportsTeam = value;
					this.SendPropertyChanged("fkSportsTeam");
					this.OnfkSportsTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> datDate
		{
			get
			{
				return this._datDate;
			}
			set
			{
				if ((this._datDate != value))
				{
					this.OndatDateChanging(value);
					this.SendPropertyChanging();
					this._datDate = value;
					this.SendPropertyChanged("datDate");
					this.OndatDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblNflTeam_tblUsersFavoriteNflTeam", Storage="_tblNflTeam", ThisKey="fkSportsTeam", OtherKey="pkTeamId", IsForeignKey=true)]
		public tblNflTeam tblNflTeam
		{
			get
			{
				return this._tblNflTeam.Entity;
			}
			set
			{
				tblNflTeam previousValue = this._tblNflTeam.Entity;
				if (((previousValue != value) 
							|| (this._tblNflTeam.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblNflTeam.Entity = null;
						previousValue.tblUsersFavoriteNflTeams.Remove(this);
					}
					this._tblNflTeam.Entity = value;
					if ((value != null))
					{
						value.tblUsersFavoriteNflTeams.Add(this);
						this._fkSportsTeam = value.pkTeamId;
					}
					else
					{
						this._fkSportsTeam = default(int);
					}
					this.SendPropertyChanged("tblNflTeam");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblUsersFavoriteNflTeam", Storage="_tblUser", ThisKey="fkUserId", OtherKey="pkUserId", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblUsersFavoriteNflTeams.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblUsersFavoriteNflTeams.Add(this);
						this._fkUserId = value.pkUserId;
					}
					else
					{
						this._fkUserId = default(int);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNflStatisticalCategoryTypes")]
	public partial class tblNflStatisticalCategoryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkStatisticalCategoryTypeId;
		
		private string _strStatisticalCategoryTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkStatisticalCategoryTypeIdChanging(int value);
    partial void OnpkStatisticalCategoryTypeIdChanged();
    partial void OnstrStatisticalCategoryTypeNameChanging(string value);
    partial void OnstrStatisticalCategoryTypeNameChanged();
    #endregion
		
		public tblNflStatisticalCategoryType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStatisticalCategoryTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkStatisticalCategoryTypeId
		{
			get
			{
				return this._pkStatisticalCategoryTypeId;
			}
			set
			{
				if ((this._pkStatisticalCategoryTypeId != value))
				{
					this.OnpkStatisticalCategoryTypeIdChanging(value);
					this.SendPropertyChanging();
					this._pkStatisticalCategoryTypeId = value;
					this.SendPropertyChanged("pkStatisticalCategoryTypeId");
					this.OnpkStatisticalCategoryTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStatisticalCategoryTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strStatisticalCategoryTypeName
		{
			get
			{
				return this._strStatisticalCategoryTypeName;
			}
			set
			{
				if ((this._strStatisticalCategoryTypeName != value))
				{
					this.OnstrStatisticalCategoryTypeNameChanging(value);
					this.SendPropertyChanging();
					this._strStatisticalCategoryTypeName = value;
					this.SendPropertyChanged("strStatisticalCategoryTypeName");
					this.OnstrStatisticalCategoryTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNflPlayers")]
	public partial class tblNflPlayer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkPlayerId;
		
		private string _strPlayerName;
		
		private string _fkPlayerTeam;
		
		private string _strPlayerImage;
		
		private string _strPlayerPosition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkPlayerIdChanging(int value);
    partial void OnpkPlayerIdChanged();
    partial void OnstrPlayerNameChanging(string value);
    partial void OnstrPlayerNameChanged();
    partial void OnfkPlayerTeamChanging(string value);
    partial void OnfkPlayerTeamChanged();
    partial void OnstrPlayerImageChanging(string value);
    partial void OnstrPlayerImageChanged();
    partial void OnstrPlayerPositionChanging(string value);
    partial void OnstrPlayerPositionChanged();
    #endregion
		
		public tblNflPlayer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkPlayerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int pkPlayerId
		{
			get
			{
				return this._pkPlayerId;
			}
			set
			{
				if ((this._pkPlayerId != value))
				{
					this.OnpkPlayerIdChanging(value);
					this.SendPropertyChanging();
					this._pkPlayerId = value;
					this.SendPropertyChanged("pkPlayerId");
					this.OnpkPlayerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPlayerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strPlayerName
		{
			get
			{
				return this._strPlayerName;
			}
			set
			{
				if ((this._strPlayerName != value))
				{
					this.OnstrPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._strPlayerName = value;
					this.SendPropertyChanged("strPlayerName");
					this.OnstrPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkPlayerTeam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fkPlayerTeam
		{
			get
			{
				return this._fkPlayerTeam;
			}
			set
			{
				if ((this._fkPlayerTeam != value))
				{
					this.OnfkPlayerTeamChanging(value);
					this.SendPropertyChanging();
					this._fkPlayerTeam = value;
					this.SendPropertyChanged("fkPlayerTeam");
					this.OnfkPlayerTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPlayerImage", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strPlayerImage
		{
			get
			{
				return this._strPlayerImage;
			}
			set
			{
				if ((this._strPlayerImage != value))
				{
					this.OnstrPlayerImageChanging(value);
					this.SendPropertyChanging();
					this._strPlayerImage = value;
					this.SendPropertyChanged("strPlayerImage");
					this.OnstrPlayerImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPlayerPosition", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string strPlayerPosition
		{
			get
			{
				return this._strPlayerPosition;
			}
			set
			{
				if ((this._strPlayerPosition != value))
				{
					this.OnstrPlayerPositionChanging(value);
					this.SendPropertyChanging();
					this._strPlayerPosition = value;
					this.SendPropertyChanged("strPlayerPosition");
					this.OnstrPlayerPositionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNflStatisticalCategoryTypesOffensivePlayer")]
	public partial class tblNflStatisticalCategoryTypesOffensivePlayer
	{
		
		private int _pkStatisticalCategoryTypeId;
		
		private string _strStatisticalCategoryTypeName;
		
		private string _strOffensivePosition;
		
		public tblNflStatisticalCategoryTypesOffensivePlayer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStatisticalCategoryTypeId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int pkStatisticalCategoryTypeId
		{
			get
			{
				return this._pkStatisticalCategoryTypeId;
			}
			set
			{
				if ((this._pkStatisticalCategoryTypeId != value))
				{
					this._pkStatisticalCategoryTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStatisticalCategoryTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strStatisticalCategoryTypeName
		{
			get
			{
				return this._strStatisticalCategoryTypeName;
			}
			set
			{
				if ((this._strStatisticalCategoryTypeName != value))
				{
					this._strStatisticalCategoryTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strOffensivePosition", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string strOffensivePosition
		{
			get
			{
				return this._strOffensivePosition;
			}
			set
			{
				if ((this._strOffensivePosition != value))
				{
					this._strOffensivePosition = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblNflStatisticalCategoryTypesDefensivePlayer")]
	public partial class tblNflStatisticalCategoryTypesDefensivePlayer
	{
		
		private int _pkStatisticalCategoryTypeId;
		
		private string _strStatisticalCategoryTypeName;
		
		public tblNflStatisticalCategoryTypesDefensivePlayer()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStatisticalCategoryTypeId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int pkStatisticalCategoryTypeId
		{
			get
			{
				return this._pkStatisticalCategoryTypeId;
			}
			set
			{
				if ((this._pkStatisticalCategoryTypeId != value))
				{
					this._pkStatisticalCategoryTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStatisticalCategoryTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strStatisticalCategoryTypeName
		{
			get
			{
				return this._strStatisticalCategoryTypeName;
			}
			set
			{
				if ((this._strStatisticalCategoryTypeName != value))
				{
					this._strStatisticalCategoryTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserTreeViewItems")]
	public partial class tblUserTreeViewItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TreeViewText;
		
		private string _NavigateURL;
		
		private System.Nullable<int> _ParentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTreeViewTextChanging(string value);
    partial void OnTreeViewTextChanged();
    partial void OnNavigateURLChanging(string value);
    partial void OnNavigateURLChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    #endregion
		
		public tblUserTreeViewItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreeViewText", DbType="NVarChar(50)")]
		public string TreeViewText
		{
			get
			{
				return this._TreeViewText;
			}
			set
			{
				if ((this._TreeViewText != value))
				{
					this.OnTreeViewTextChanging(value);
					this.SendPropertyChanging();
					this._TreeViewText = value;
					this.SendPropertyChanged("TreeViewText");
					this.OnTreeViewTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavigateURL", DbType="NVarChar(50)")]
		public string NavigateURL
		{
			get
			{
				return this._NavigateURL;
			}
			set
			{
				if ((this._NavigateURL != value))
				{
					this.OnNavigateURLChanging(value);
					this.SendPropertyChanging();
					this._NavigateURL = value;
					this.SendPropertyChanged("NavigateURL");
					this.OnNavigateURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCredentialsRecovery")]
	public partial class tblCredentialsRecovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkStatisticalCategoryTypeId;
		
		private System.Guid _guiRecoveryGuid;
		
		private int _fkUserId;
		
		private System.DateTime _datResetRequestDateTime;
		
		private string _strTemporaryPassWord;
		
		private bool _blnIsPassWordRecovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkStatisticalCategoryTypeIdChanging(int value);
    partial void OnpkStatisticalCategoryTypeIdChanged();
    partial void OnguiRecoveryGuidChanging(System.Guid value);
    partial void OnguiRecoveryGuidChanged();
    partial void OnfkUserIdChanging(int value);
    partial void OnfkUserIdChanged();
    partial void OndatResetRequestDateTimeChanging(System.DateTime value);
    partial void OndatResetRequestDateTimeChanged();
    partial void OnstrTemporaryPassWordChanging(string value);
    partial void OnstrTemporaryPassWordChanged();
    partial void OnblnIsPassWordRecoveryChanging(bool value);
    partial void OnblnIsPassWordRecoveryChanged();
    #endregion
		
		public tblCredentialsRecovery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStatisticalCategoryTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkStatisticalCategoryTypeId
		{
			get
			{
				return this._pkStatisticalCategoryTypeId;
			}
			set
			{
				if ((this._pkStatisticalCategoryTypeId != value))
				{
					this.OnpkStatisticalCategoryTypeIdChanging(value);
					this.SendPropertyChanging();
					this._pkStatisticalCategoryTypeId = value;
					this.SendPropertyChanged("pkStatisticalCategoryTypeId");
					this.OnpkStatisticalCategoryTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guiRecoveryGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid guiRecoveryGuid
		{
			get
			{
				return this._guiRecoveryGuid;
			}
			set
			{
				if ((this._guiRecoveryGuid != value))
				{
					this.OnguiRecoveryGuidChanging(value);
					this.SendPropertyChanging();
					this._guiRecoveryGuid = value;
					this.SendPropertyChanged("guiRecoveryGuid");
					this.OnguiRecoveryGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserId", DbType="Int NOT NULL")]
		public int fkUserId
		{
			get
			{
				return this._fkUserId;
			}
			set
			{
				if ((this._fkUserId != value))
				{
					this.OnfkUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkUserId = value;
					this.SendPropertyChanged("fkUserId");
					this.OnfkUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datResetRequestDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime datResetRequestDateTime
		{
			get
			{
				return this._datResetRequestDateTime;
			}
			set
			{
				if ((this._datResetRequestDateTime != value))
				{
					this.OndatResetRequestDateTimeChanging(value);
					this.SendPropertyChanging();
					this._datResetRequestDateTime = value;
					this.SendPropertyChanged("datResetRequestDateTime");
					this.OndatResetRequestDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTemporaryPassWord", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strTemporaryPassWord
		{
			get
			{
				return this._strTemporaryPassWord;
			}
			set
			{
				if ((this._strTemporaryPassWord != value))
				{
					this.OnstrTemporaryPassWordChanging(value);
					this.SendPropertyChanging();
					this._strTemporaryPassWord = value;
					this.SendPropertyChanged("strTemporaryPassWord");
					this.OnstrTemporaryPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnIsPassWordRecovery", DbType="Bit NOT NULL")]
		public bool blnIsPassWordRecovery
		{
			get
			{
				return this._blnIsPassWordRecovery;
			}
			set
			{
				if ((this._blnIsPassWordRecovery != value))
				{
					this.OnblnIsPassWordRecoveryChanging(value);
					this.SendPropertyChanging();
					this._blnIsPassWordRecovery = value;
					this.SendPropertyChanged("blnIsPassWordRecovery");
					this.OnblnIsPassWordRecoveryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsersPaymentInformation")]
	public partial class tblUsersPaymentInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkPaymentInformationId;
		
		private int _fkUserId;
		
		private string _strAccountNumber;
		
		private string _strFirstName;
		
		private string _strLastName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkPaymentInformationIdChanging(int value);
    partial void OnpkPaymentInformationIdChanged();
    partial void OnfkUserIdChanging(int value);
    partial void OnfkUserIdChanged();
    partial void OnstrAccountNumberChanging(string value);
    partial void OnstrAccountNumberChanged();
    partial void OnstrFirstNameChanging(string value);
    partial void OnstrFirstNameChanged();
    partial void OnstrLastNameChanging(string value);
    partial void OnstrLastNameChanged();
    #endregion
		
		public tblUsersPaymentInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkPaymentInformationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkPaymentInformationId
		{
			get
			{
				return this._pkPaymentInformationId;
			}
			set
			{
				if ((this._pkPaymentInformationId != value))
				{
					this.OnpkPaymentInformationIdChanging(value);
					this.SendPropertyChanging();
					this._pkPaymentInformationId = value;
					this.SendPropertyChanged("pkPaymentInformationId");
					this.OnpkPaymentInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserId", DbType="Int NOT NULL")]
		public int fkUserId
		{
			get
			{
				return this._fkUserId;
			}
			set
			{
				if ((this._fkUserId != value))
				{
					this.OnfkUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkUserId = value;
					this.SendPropertyChanged("fkUserId");
					this.OnfkUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAccountNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strAccountNumber
		{
			get
			{
				return this._strAccountNumber;
			}
			set
			{
				if ((this._strAccountNumber != value))
				{
					this.OnstrAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._strAccountNumber = value;
					this.SendPropertyChanged("strAccountNumber");
					this.OnstrAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strFirstName
		{
			get
			{
				return this._strFirstName;
			}
			set
			{
				if ((this._strFirstName != value))
				{
					this.OnstrFirstNameChanging(value);
					this.SendPropertyChanging();
					this._strFirstName = value;
					this.SendPropertyChanged("strFirstName");
					this.OnstrFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strLastName
		{
			get
			{
				return this._strLastName;
			}
			set
			{
				if ((this._strLastName != value))
				{
					this.OnstrLastNameChanging(value);
					this.SendPropertyChanging();
					this._strLastName = value;
					this.SendPropertyChanged("strLastName");
					this.OnstrLastNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLinkUsersToBets")]
	public partial class tblLinkUsersToBet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkLinkId;
		
		private int _fkUserWhoCreatedId;
		
		private int _fkUserWhoAccepted;
		
		private int _fkBetId;
		
		private bool _blnIsTeamBet;
		
		private System.DateTime _datDateTimeAccepted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkLinkIdChanging(int value);
    partial void OnpkLinkIdChanged();
    partial void OnfkUserWhoCreatedIdChanging(int value);
    partial void OnfkUserWhoCreatedIdChanged();
    partial void OnfkUserWhoAcceptedChanging(int value);
    partial void OnfkUserWhoAcceptedChanged();
    partial void OnfkBetIdChanging(int value);
    partial void OnfkBetIdChanged();
    partial void OnblnIsTeamBetChanging(bool value);
    partial void OnblnIsTeamBetChanged();
    partial void OndatDateTimeAcceptedChanging(System.DateTime value);
    partial void OndatDateTimeAcceptedChanged();
    #endregion
		
		public tblLinkUsersToBet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkLinkId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkLinkId
		{
			get
			{
				return this._pkLinkId;
			}
			set
			{
				if ((this._pkLinkId != value))
				{
					this.OnpkLinkIdChanging(value);
					this.SendPropertyChanging();
					this._pkLinkId = value;
					this.SendPropertyChanged("pkLinkId");
					this.OnpkLinkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserWhoCreatedId", DbType="Int NOT NULL")]
		public int fkUserWhoCreatedId
		{
			get
			{
				return this._fkUserWhoCreatedId;
			}
			set
			{
				if ((this._fkUserWhoCreatedId != value))
				{
					this.OnfkUserWhoCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._fkUserWhoCreatedId = value;
					this.SendPropertyChanged("fkUserWhoCreatedId");
					this.OnfkUserWhoCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserWhoAccepted", DbType="Int NOT NULL")]
		public int fkUserWhoAccepted
		{
			get
			{
				return this._fkUserWhoAccepted;
			}
			set
			{
				if ((this._fkUserWhoAccepted != value))
				{
					this.OnfkUserWhoAcceptedChanging(value);
					this.SendPropertyChanging();
					this._fkUserWhoAccepted = value;
					this.SendPropertyChanged("fkUserWhoAccepted");
					this.OnfkUserWhoAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkBetId", DbType="Int NOT NULL")]
		public int fkBetId
		{
			get
			{
				return this._fkBetId;
			}
			set
			{
				if ((this._fkBetId != value))
				{
					this.OnfkBetIdChanging(value);
					this.SendPropertyChanging();
					this._fkBetId = value;
					this.SendPropertyChanged("fkBetId");
					this.OnfkBetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnIsTeamBet", DbType="Bit NOT NULL")]
		public bool blnIsTeamBet
		{
			get
			{
				return this._blnIsTeamBet;
			}
			set
			{
				if ((this._blnIsTeamBet != value))
				{
					this.OnblnIsTeamBetChanging(value);
					this.SendPropertyChanging();
					this._blnIsTeamBet = value;
					this.SendPropertyChanged("blnIsTeamBet");
					this.OnblnIsTeamBetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTimeAccepted", DbType="DateTime NOT NULL")]
		public System.DateTime datDateTimeAccepted
		{
			get
			{
				return this._datDateTimeAccepted;
			}
			set
			{
				if ((this._datDateTimeAccepted != value))
				{
					this.OndatDateTimeAcceptedChanging(value);
					this.SendPropertyChanging();
					this._datDateTimeAccepted = value;
					this.SendPropertyChanged("datDateTimeAccepted");
					this.OndatDateTimeAcceptedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBetHistory")]
	public partial class tblBetHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkHistoryId;
		
		private int _fkBetId;
		
		private int _fkUserIdWinner;
		
		private int _fkUserIdLoser;
		
		private System.Nullable<bool> _IsTeamBet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkHistoryIdChanging(int value);
    partial void OnpkHistoryIdChanged();
    partial void OnfkBetIdChanging(int value);
    partial void OnfkBetIdChanged();
    partial void OnfkUserIdWinnerChanging(int value);
    partial void OnfkUserIdWinnerChanged();
    partial void OnfkUserIdLoserChanging(int value);
    partial void OnfkUserIdLoserChanged();
    partial void OnIsTeamBetChanging(System.Nullable<bool> value);
    partial void OnIsTeamBetChanged();
    #endregion
		
		public tblBetHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkHistoryId
		{
			get
			{
				return this._pkHistoryId;
			}
			set
			{
				if ((this._pkHistoryId != value))
				{
					this.OnpkHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._pkHistoryId = value;
					this.SendPropertyChanged("pkHistoryId");
					this.OnpkHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkBetId", DbType="Int NOT NULL")]
		public int fkBetId
		{
			get
			{
				return this._fkBetId;
			}
			set
			{
				if ((this._fkBetId != value))
				{
					this.OnfkBetIdChanging(value);
					this.SendPropertyChanging();
					this._fkBetId = value;
					this.SendPropertyChanged("fkBetId");
					this.OnfkBetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserIdWinner", DbType="Int NOT NULL")]
		public int fkUserIdWinner
		{
			get
			{
				return this._fkUserIdWinner;
			}
			set
			{
				if ((this._fkUserIdWinner != value))
				{
					this.OnfkUserIdWinnerChanging(value);
					this.SendPropertyChanging();
					this._fkUserIdWinner = value;
					this.SendPropertyChanged("fkUserIdWinner");
					this.OnfkUserIdWinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserIdLoser", DbType="Int NOT NULL")]
		public int fkUserIdLoser
		{
			get
			{
				return this._fkUserIdLoser;
			}
			set
			{
				if ((this._fkUserIdLoser != value))
				{
					this.OnfkUserIdLoserChanging(value);
					this.SendPropertyChanging();
					this._fkUserIdLoser = value;
					this.SendPropertyChanged("fkUserIdLoser");
					this.OnfkUserIdLoserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeamBet", DbType="Bit")]
		public System.Nullable<bool> IsTeamBet
		{
			get
			{
				return this._IsTeamBet;
			}
			set
			{
				if ((this._IsTeamBet != value))
				{
					this.OnIsTeamBetChanging(value);
					this.SendPropertyChanging();
					this._IsTeamBet = value;
					this.SendPropertyChanged("IsTeamBet");
					this.OnIsTeamBetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblParentBulletinBoard")]
	public partial class tblParentBulletinBoard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intParentBoardId;
		
		private string _strBoardMessage;
		
		private int _intBetId;
		
		private System.Nullable<int> _intBoardAttachmentId;
		
		private bool _blnIsTeamBet;
		
		private int _intUserIdWhoPostedBoard;
		
		private System.Nullable<System.DateTime> _datDateTimeCreated;
		
		private System.Nullable<int> _intNumOfLikes;
		
		private EntitySet<tblChildBulletinBoard> _tblChildBulletinBoards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintParentBoardIdChanging(int value);
    partial void OnintParentBoardIdChanged();
    partial void OnstrBoardMessageChanging(string value);
    partial void OnstrBoardMessageChanged();
    partial void OnintBetIdChanging(int value);
    partial void OnintBetIdChanged();
    partial void OnintBoardAttachmentIdChanging(System.Nullable<int> value);
    partial void OnintBoardAttachmentIdChanged();
    partial void OnblnIsTeamBetChanging(bool value);
    partial void OnblnIsTeamBetChanged();
    partial void OnintUserIdWhoPostedBoardChanging(int value);
    partial void OnintUserIdWhoPostedBoardChanged();
    partial void OndatDateTimeCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndatDateTimeCreatedChanged();
    partial void OnintNumOfLikesChanging(System.Nullable<int> value);
    partial void OnintNumOfLikesChanged();
    #endregion
		
		public tblParentBulletinBoard()
		{
			this._tblChildBulletinBoards = new EntitySet<tblChildBulletinBoard>(new Action<tblChildBulletinBoard>(this.attach_tblChildBulletinBoards), new Action<tblChildBulletinBoard>(this.detach_tblChildBulletinBoards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intParentBoardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int intParentBoardId
		{
			get
			{
				return this._intParentBoardId;
			}
			set
			{
				if ((this._intParentBoardId != value))
				{
					this.OnintParentBoardIdChanging(value);
					this.SendPropertyChanging();
					this._intParentBoardId = value;
					this.SendPropertyChanged("intParentBoardId");
					this.OnintParentBoardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBoardMessage", DbType="NVarChar(MAX)")]
		public string strBoardMessage
		{
			get
			{
				return this._strBoardMessage;
			}
			set
			{
				if ((this._strBoardMessage != value))
				{
					this.OnstrBoardMessageChanging(value);
					this.SendPropertyChanging();
					this._strBoardMessage = value;
					this.SendPropertyChanged("strBoardMessage");
					this.OnstrBoardMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBetId", DbType="Int NOT NULL")]
		public int intBetId
		{
			get
			{
				return this._intBetId;
			}
			set
			{
				if ((this._intBetId != value))
				{
					this.OnintBetIdChanging(value);
					this.SendPropertyChanging();
					this._intBetId = value;
					this.SendPropertyChanged("intBetId");
					this.OnintBetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBoardAttachmentId", DbType="Int")]
		public System.Nullable<int> intBoardAttachmentId
		{
			get
			{
				return this._intBoardAttachmentId;
			}
			set
			{
				if ((this._intBoardAttachmentId != value))
				{
					this.OnintBoardAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._intBoardAttachmentId = value;
					this.SendPropertyChanged("intBoardAttachmentId");
					this.OnintBoardAttachmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnIsTeamBet", DbType="Bit NOT NULL")]
		public bool blnIsTeamBet
		{
			get
			{
				return this._blnIsTeamBet;
			}
			set
			{
				if ((this._blnIsTeamBet != value))
				{
					this.OnblnIsTeamBetChanging(value);
					this.SendPropertyChanging();
					this._blnIsTeamBet = value;
					this.SendPropertyChanged("blnIsTeamBet");
					this.OnblnIsTeamBetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intUserIdWhoPostedBoard", DbType="Int NOT NULL")]
		public int intUserIdWhoPostedBoard
		{
			get
			{
				return this._intUserIdWhoPostedBoard;
			}
			set
			{
				if ((this._intUserIdWhoPostedBoard != value))
				{
					this.OnintUserIdWhoPostedBoardChanging(value);
					this.SendPropertyChanging();
					this._intUserIdWhoPostedBoard = value;
					this.SendPropertyChanged("intUserIdWhoPostedBoard");
					this.OnintUserIdWhoPostedBoardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTimeCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> datDateTimeCreated
		{
			get
			{
				return this._datDateTimeCreated;
			}
			set
			{
				if ((this._datDateTimeCreated != value))
				{
					this.OndatDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._datDateTimeCreated = value;
					this.SendPropertyChanged("datDateTimeCreated");
					this.OndatDateTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumOfLikes", DbType="Int")]
		public System.Nullable<int> intNumOfLikes
		{
			get
			{
				return this._intNumOfLikes;
			}
			set
			{
				if ((this._intNumOfLikes != value))
				{
					this.OnintNumOfLikesChanging(value);
					this.SendPropertyChanging();
					this._intNumOfLikes = value;
					this.SendPropertyChanged("intNumOfLikes");
					this.OnintNumOfLikesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblParentBulletinBoard_tblChildBulletinBoard", Storage="_tblChildBulletinBoards", ThisKey="intParentBoardId", OtherKey="intParentBoardId")]
		public EntitySet<tblChildBulletinBoard> tblChildBulletinBoards
		{
			get
			{
				return this._tblChildBulletinBoards;
			}
			set
			{
				this._tblChildBulletinBoards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblChildBulletinBoards(tblChildBulletinBoard entity)
		{
			this.SendPropertyChanging();
			entity.tblParentBulletinBoard = this;
		}
		
		private void detach_tblChildBulletinBoards(tblChildBulletinBoard entity)
		{
			this.SendPropertyChanging();
			entity.tblParentBulletinBoard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblChildBulletinBoard")]
	public partial class tblChildBulletinBoard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intChildBoardId;
		
		private int _intParentBoardId;
		
		private string _strBoardMessage;
		
		private System.Nullable<int> _intBoardAttachmentId;
		
		private int _intBoardCreatorUserId;
		
		private System.Nullable<System.DateTime> _datDateTimeCreated;
		
		private System.Nullable<int> _intNumOfLikes;
		
		private EntityRef<tblParentBulletinBoard> _tblParentBulletinBoard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintChildBoardIdChanging(int value);
    partial void OnintChildBoardIdChanged();
    partial void OnintParentBoardIdChanging(int value);
    partial void OnintParentBoardIdChanged();
    partial void OnstrBoardMessageChanging(string value);
    partial void OnstrBoardMessageChanged();
    partial void OnintBoardAttachmentIdChanging(System.Nullable<int> value);
    partial void OnintBoardAttachmentIdChanged();
    partial void OnintBoardCreatorUserIdChanging(int value);
    partial void OnintBoardCreatorUserIdChanged();
    partial void OndatDateTimeCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndatDateTimeCreatedChanged();
    partial void OnintNumOfLikesChanging(System.Nullable<int> value);
    partial void OnintNumOfLikesChanged();
    #endregion
		
		public tblChildBulletinBoard()
		{
			this._tblParentBulletinBoard = default(EntityRef<tblParentBulletinBoard>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intChildBoardId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int intChildBoardId
		{
			get
			{
				return this._intChildBoardId;
			}
			set
			{
				if ((this._intChildBoardId != value))
				{
					this.OnintChildBoardIdChanging(value);
					this.SendPropertyChanging();
					this._intChildBoardId = value;
					this.SendPropertyChanged("intChildBoardId");
					this.OnintChildBoardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intParentBoardId", DbType="Int NOT NULL")]
		public int intParentBoardId
		{
			get
			{
				return this._intParentBoardId;
			}
			set
			{
				if ((this._intParentBoardId != value))
				{
					if (this._tblParentBulletinBoard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnintParentBoardIdChanging(value);
					this.SendPropertyChanging();
					this._intParentBoardId = value;
					this.SendPropertyChanged("intParentBoardId");
					this.OnintParentBoardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBoardMessage", DbType="NVarChar(MAX)")]
		public string strBoardMessage
		{
			get
			{
				return this._strBoardMessage;
			}
			set
			{
				if ((this._strBoardMessage != value))
				{
					this.OnstrBoardMessageChanging(value);
					this.SendPropertyChanging();
					this._strBoardMessage = value;
					this.SendPropertyChanged("strBoardMessage");
					this.OnstrBoardMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBoardAttachmentId", DbType="Int")]
		public System.Nullable<int> intBoardAttachmentId
		{
			get
			{
				return this._intBoardAttachmentId;
			}
			set
			{
				if ((this._intBoardAttachmentId != value))
				{
					this.OnintBoardAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._intBoardAttachmentId = value;
					this.SendPropertyChanged("intBoardAttachmentId");
					this.OnintBoardAttachmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intBoardCreatorUserId", DbType="Int NOT NULL")]
		public int intBoardCreatorUserId
		{
			get
			{
				return this._intBoardCreatorUserId;
			}
			set
			{
				if ((this._intBoardCreatorUserId != value))
				{
					this.OnintBoardCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._intBoardCreatorUserId = value;
					this.SendPropertyChanged("intBoardCreatorUserId");
					this.OnintBoardCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTimeCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> datDateTimeCreated
		{
			get
			{
				return this._datDateTimeCreated;
			}
			set
			{
				if ((this._datDateTimeCreated != value))
				{
					this.OndatDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._datDateTimeCreated = value;
					this.SendPropertyChanged("datDateTimeCreated");
					this.OndatDateTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumOfLikes", DbType="Int")]
		public System.Nullable<int> intNumOfLikes
		{
			get
			{
				return this._intNumOfLikes;
			}
			set
			{
				if ((this._intNumOfLikes != value))
				{
					this.OnintNumOfLikesChanging(value);
					this.SendPropertyChanging();
					this._intNumOfLikes = value;
					this.SendPropertyChanged("intNumOfLikes");
					this.OnintNumOfLikesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblParentBulletinBoard_tblChildBulletinBoard", Storage="_tblParentBulletinBoard", ThisKey="intParentBoardId", OtherKey="intParentBoardId", IsForeignKey=true)]
		public tblParentBulletinBoard tblParentBulletinBoard
		{
			get
			{
				return this._tblParentBulletinBoard.Entity;
			}
			set
			{
				tblParentBulletinBoard previousValue = this._tblParentBulletinBoard.Entity;
				if (((previousValue != value) 
							|| (this._tblParentBulletinBoard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblParentBulletinBoard.Entity = null;
						previousValue.tblChildBulletinBoards.Remove(this);
					}
					this._tblParentBulletinBoard.Entity = value;
					if ((value != null))
					{
						value.tblChildBulletinBoards.Add(this);
						this._intParentBoardId = value.intParentBoardId;
					}
					else
					{
						this._intParentBoardId = default(int);
					}
					this.SendPropertyChanged("tblParentBulletinBoard");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkUserId;
		
		private string _strUserName;
		
		private string _strPassword;
		
		private string _strEmail;
		
		private System.Data.Linq.Binary _bytUserImage;
		
		private System.Nullable<System.DateTime> _datDateRegistered;
		
		private EntitySet<tblUsersFavoriteNflTeam> _tblUsersFavoriteNflTeams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkUserIdChanging(int value);
    partial void OnpkUserIdChanged();
    partial void OnstrUserNameChanging(string value);
    partial void OnstrUserNameChanged();
    partial void OnstrPasswordChanging(string value);
    partial void OnstrPasswordChanged();
    partial void OnstrEmailChanging(string value);
    partial void OnstrEmailChanged();
    partial void OnbytUserImageChanging(System.Data.Linq.Binary value);
    partial void OnbytUserImageChanged();
    partial void OndatDateRegisteredChanging(System.Nullable<System.DateTime> value);
    partial void OndatDateRegisteredChanged();
    #endregion
		
		public tblUser()
		{
			this._tblUsersFavoriteNflTeams = new EntitySet<tblUsersFavoriteNflTeam>(new Action<tblUsersFavoriteNflTeam>(this.attach_tblUsersFavoriteNflTeams), new Action<tblUsersFavoriteNflTeam>(this.detach_tblUsersFavoriteNflTeams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkUserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkUserId
		{
			get
			{
				return this._pkUserId;
			}
			set
			{
				if ((this._pkUserId != value))
				{
					this.OnpkUserIdChanging(value);
					this.SendPropertyChanging();
					this._pkUserId = value;
					this.SendPropertyChanged("pkUserId");
					this.OnpkUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strUserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strUserName
		{
			get
			{
				return this._strUserName;
			}
			set
			{
				if ((this._strUserName != value))
				{
					this.OnstrUserNameChanging(value);
					this.SendPropertyChanging();
					this._strUserName = value;
					this.SendPropertyChanged("strUserName");
					this.OnstrUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPassword", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string strPassword
		{
			get
			{
				return this._strPassword;
			}
			set
			{
				if ((this._strPassword != value))
				{
					this.OnstrPasswordChanging(value);
					this.SendPropertyChanging();
					this._strPassword = value;
					this.SendPropertyChanged("strPassword");
					this.OnstrPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this.OnstrEmailChanging(value);
					this.SendPropertyChanging();
					this._strEmail = value;
					this.SendPropertyChanged("strEmail");
					this.OnstrEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bytUserImage", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary bytUserImage
		{
			get
			{
				return this._bytUserImage;
			}
			set
			{
				if ((this._bytUserImage != value))
				{
					this.OnbytUserImageChanging(value);
					this.SendPropertyChanging();
					this._bytUserImage = value;
					this.SendPropertyChanged("bytUserImage");
					this.OnbytUserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateRegistered", DbType="Date")]
		public System.Nullable<System.DateTime> datDateRegistered
		{
			get
			{
				return this._datDateRegistered;
			}
			set
			{
				if ((this._datDateRegistered != value))
				{
					this.OndatDateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._datDateRegistered = value;
					this.SendPropertyChanged("datDateRegistered");
					this.OndatDateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblUsersFavoriteNflTeam", Storage="_tblUsersFavoriteNflTeams", ThisKey="pkUserId", OtherKey="fkUserId")]
		public EntitySet<tblUsersFavoriteNflTeam> tblUsersFavoriteNflTeams
		{
			get
			{
				return this._tblUsersFavoriteNflTeams;
			}
			set
			{
				this._tblUsersFavoriteNflTeams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsersFavoriteNflTeams(tblUsersFavoriteNflTeam entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblUsersFavoriteNflTeams(tblUsersFavoriteNflTeam entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTeamStatsActualResults")]
	public partial class tblTeamStatsActualResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkActualResultId;
		
		private int _fkGameId;
		
		private string _strTeam;
		
		private System.DateTime _datDateOfGame;
		
		private int _Yards;
		
		private int _PassingYards;
		
		private int _RushingYards;
		
		private int _ReceivingYards;
		
		private decimal _Sacks;
		
		private int _Scoring;
		
		private int _Touchdowns;
		
		private decimal _Tackles;
		
		private int _Interceptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkActualResultIdChanging(int value);
    partial void OnpkActualResultIdChanged();
    partial void OnfkGameIdChanging(int value);
    partial void OnfkGameIdChanged();
    partial void OnstrTeamChanging(string value);
    partial void OnstrTeamChanged();
    partial void OndatDateOfGameChanging(System.DateTime value);
    partial void OndatDateOfGameChanged();
    partial void OnYardsChanging(int value);
    partial void OnYardsChanged();
    partial void OnPassingYardsChanging(int value);
    partial void OnPassingYardsChanged();
    partial void OnRushingYardsChanging(int value);
    partial void OnRushingYardsChanged();
    partial void OnReceivingYardsChanging(int value);
    partial void OnReceivingYardsChanged();
    partial void OnSacksChanging(decimal value);
    partial void OnSacksChanged();
    partial void OnScoringChanging(int value);
    partial void OnScoringChanged();
    partial void OnTouchdownsChanging(int value);
    partial void OnTouchdownsChanged();
    partial void OnTacklesChanging(decimal value);
    partial void OnTacklesChanged();
    partial void OnInterceptionsChanging(int value);
    partial void OnInterceptionsChanged();
    #endregion
		
		public tblTeamStatsActualResult()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkActualResultId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkActualResultId
		{
			get
			{
				return this._pkActualResultId;
			}
			set
			{
				if ((this._pkActualResultId != value))
				{
					this.OnpkActualResultIdChanging(value);
					this.SendPropertyChanging();
					this._pkActualResultId = value;
					this.SendPropertyChanged("pkActualResultId");
					this.OnpkActualResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkGameId", DbType="Int NOT NULL")]
		public int fkGameId
		{
			get
			{
				return this._fkGameId;
			}
			set
			{
				if ((this._fkGameId != value))
				{
					this.OnfkGameIdChanging(value);
					this.SendPropertyChanging();
					this._fkGameId = value;
					this.SendPropertyChanged("fkGameId");
					this.OnfkGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTeam", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strTeam
		{
			get
			{
				return this._strTeam;
			}
			set
			{
				if ((this._strTeam != value))
				{
					this.OnstrTeamChanging(value);
					this.SendPropertyChanging();
					this._strTeam = value;
					this.SendPropertyChanged("strTeam");
					this.OnstrTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateOfGame", DbType="Date NOT NULL")]
		public System.DateTime datDateOfGame
		{
			get
			{
				return this._datDateOfGame;
			}
			set
			{
				if ((this._datDateOfGame != value))
				{
					this.OndatDateOfGameChanging(value);
					this.SendPropertyChanging();
					this._datDateOfGame = value;
					this.SendPropertyChanged("datDateOfGame");
					this.OndatDateOfGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yards", DbType="Int NOT NULL")]
		public int Yards
		{
			get
			{
				return this._Yards;
			}
			set
			{
				if ((this._Yards != value))
				{
					this.OnYardsChanging(value);
					this.SendPropertyChanging();
					this._Yards = value;
					this.SendPropertyChanged("Yards");
					this.OnYardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassingYards", DbType="Int NOT NULL")]
		public int PassingYards
		{
			get
			{
				return this._PassingYards;
			}
			set
			{
				if ((this._PassingYards != value))
				{
					this.OnPassingYardsChanging(value);
					this.SendPropertyChanging();
					this._PassingYards = value;
					this.SendPropertyChanged("PassingYards");
					this.OnPassingYardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RushingYards", DbType="Int NOT NULL")]
		public int RushingYards
		{
			get
			{
				return this._RushingYards;
			}
			set
			{
				if ((this._RushingYards != value))
				{
					this.OnRushingYardsChanging(value);
					this.SendPropertyChanging();
					this._RushingYards = value;
					this.SendPropertyChanged("RushingYards");
					this.OnRushingYardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingYards", DbType="Int NOT NULL")]
		public int ReceivingYards
		{
			get
			{
				return this._ReceivingYards;
			}
			set
			{
				if ((this._ReceivingYards != value))
				{
					this.OnReceivingYardsChanging(value);
					this.SendPropertyChanging();
					this._ReceivingYards = value;
					this.SendPropertyChanged("ReceivingYards");
					this.OnReceivingYardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sacks", DbType="Decimal(18,0) NOT NULL")]
		public decimal Sacks
		{
			get
			{
				return this._Sacks;
			}
			set
			{
				if ((this._Sacks != value))
				{
					this.OnSacksChanging(value);
					this.SendPropertyChanging();
					this._Sacks = value;
					this.SendPropertyChanged("Sacks");
					this.OnSacksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scoring", DbType="Int NOT NULL")]
		public int Scoring
		{
			get
			{
				return this._Scoring;
			}
			set
			{
				if ((this._Scoring != value))
				{
					this.OnScoringChanging(value);
					this.SendPropertyChanging();
					this._Scoring = value;
					this.SendPropertyChanged("Scoring");
					this.OnScoringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Touchdowns", DbType="Int NOT NULL")]
		public int Touchdowns
		{
			get
			{
				return this._Touchdowns;
			}
			set
			{
				if ((this._Touchdowns != value))
				{
					this.OnTouchdownsChanging(value);
					this.SendPropertyChanging();
					this._Touchdowns = value;
					this.SendPropertyChanged("Touchdowns");
					this.OnTouchdownsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tackles", DbType="Decimal(18,0) NOT NULL")]
		public decimal Tackles
		{
			get
			{
				return this._Tackles;
			}
			set
			{
				if ((this._Tackles != value))
				{
					this.OnTacklesChanging(value);
					this.SendPropertyChanging();
					this._Tackles = value;
					this.SendPropertyChanged("Tackles");
					this.OnTacklesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interceptions", DbType="Int NOT NULL")]
		public int Interceptions
		{
			get
			{
				return this._Interceptions;
			}
			set
			{
				if ((this._Interceptions != value))
				{
					this.OnInterceptionsChanging(value);
					this.SendPropertyChanging();
					this._Interceptions = value;
					this.SendPropertyChanged("Interceptions");
					this.OnInterceptionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBetApprovals")]
	public partial class tblBetApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkHistoryId;
		
		private int _fkBetId;
		
		private int _fkUserIdWhoApproved;
		
		private System.Nullable<System.DateTime> _datDateTime;
		
		private bool _blnIsTeamBet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkHistoryIdChanging(int value);
    partial void OnpkHistoryIdChanged();
    partial void OnfkBetIdChanging(int value);
    partial void OnfkBetIdChanged();
    partial void OnfkUserIdWhoApprovedChanging(int value);
    partial void OnfkUserIdWhoApprovedChanged();
    partial void OndatDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OndatDateTimeChanged();
    partial void OnblnIsTeamBetChanging(bool value);
    partial void OnblnIsTeamBetChanged();
    #endregion
		
		public tblBetApproval()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkHistoryId
		{
			get
			{
				return this._pkHistoryId;
			}
			set
			{
				if ((this._pkHistoryId != value))
				{
					this.OnpkHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._pkHistoryId = value;
					this.SendPropertyChanged("pkHistoryId");
					this.OnpkHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkBetId", DbType="Int NOT NULL")]
		public int fkBetId
		{
			get
			{
				return this._fkBetId;
			}
			set
			{
				if ((this._fkBetId != value))
				{
					this.OnfkBetIdChanging(value);
					this.SendPropertyChanging();
					this._fkBetId = value;
					this.SendPropertyChanged("fkBetId");
					this.OnfkBetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserIdWhoApproved", DbType="Int NOT NULL")]
		public int fkUserIdWhoApproved
		{
			get
			{
				return this._fkUserIdWhoApproved;
			}
			set
			{
				if ((this._fkUserIdWhoApproved != value))
				{
					this.OnfkUserIdWhoApprovedChanging(value);
					this.SendPropertyChanging();
					this._fkUserIdWhoApproved = value;
					this.SendPropertyChanged("fkUserIdWhoApproved");
					this.OnfkUserIdWhoApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> datDateTime
		{
			get
			{
				return this._datDateTime;
			}
			set
			{
				if ((this._datDateTime != value))
				{
					this.OndatDateTimeChanging(value);
					this.SendPropertyChanging();
					this._datDateTime = value;
					this.SendPropertyChanged("datDateTime");
					this.OndatDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnIsTeamBet", DbType="Bit NOT NULL")]
		public bool blnIsTeamBet
		{
			get
			{
				return this._blnIsTeamBet;
			}
			set
			{
				if ((this._blnIsTeamBet != value))
				{
					this.OnblnIsTeamBetChanging(value);
					this.SendPropertyChanging();
					this._blnIsTeamBet = value;
					this.SendPropertyChanged("blnIsTeamBet");
					this.OnblnIsTeamBetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlayerBets")]
	public partial class tblPlayerBet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkBetId;
		
		private int _fkCreatorUserId;
		
		private int _intWeekNumber;
		
		private string _strPlayerName;
		
		private string _fkStatType;
		
		private string _strLogicArgument;
		
		private decimal _decArgumentValue;
		
		private System.DateTime _datDateTimeCreated;
		
		private decimal _decMoneyWager;
		
		private bool _blnBetIsOpened;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkBetIdChanging(int value);
    partial void OnpkBetIdChanged();
    partial void OnfkCreatorUserIdChanging(int value);
    partial void OnfkCreatorUserIdChanged();
    partial void OnintWeekNumberChanging(int value);
    partial void OnintWeekNumberChanged();
    partial void OnstrPlayerNameChanging(string value);
    partial void OnstrPlayerNameChanged();
    partial void OnfkStatTypeChanging(string value);
    partial void OnfkStatTypeChanged();
    partial void OnstrLogicArgumentChanging(string value);
    partial void OnstrLogicArgumentChanged();
    partial void OndecArgumentValueChanging(decimal value);
    partial void OndecArgumentValueChanged();
    partial void OndatDateTimeCreatedChanging(System.DateTime value);
    partial void OndatDateTimeCreatedChanged();
    partial void OndecMoneyWagerChanging(decimal value);
    partial void OndecMoneyWagerChanged();
    partial void OnblnBetIsOpenedChanging(bool value);
    partial void OnblnBetIsOpenedChanged();
    #endregion
		
		public tblPlayerBet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkBetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkBetId
		{
			get
			{
				return this._pkBetId;
			}
			set
			{
				if ((this._pkBetId != value))
				{
					this.OnpkBetIdChanging(value);
					this.SendPropertyChanging();
					this._pkBetId = value;
					this.SendPropertyChanged("pkBetId");
					this.OnpkBetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkCreatorUserId", DbType="Int NOT NULL")]
		public int fkCreatorUserId
		{
			get
			{
				return this._fkCreatorUserId;
			}
			set
			{
				if ((this._fkCreatorUserId != value))
				{
					this.OnfkCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkCreatorUserId = value;
					this.SendPropertyChanged("fkCreatorUserId");
					this.OnfkCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intWeekNumber", DbType="Int NOT NULL")]
		public int intWeekNumber
		{
			get
			{
				return this._intWeekNumber;
			}
			set
			{
				if ((this._intWeekNumber != value))
				{
					this.OnintWeekNumberChanging(value);
					this.SendPropertyChanging();
					this._intWeekNumber = value;
					this.SendPropertyChanged("intWeekNumber");
					this.OnintWeekNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPlayerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strPlayerName
		{
			get
			{
				return this._strPlayerName;
			}
			set
			{
				if ((this._strPlayerName != value))
				{
					this.OnstrPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._strPlayerName = value;
					this.SendPropertyChanged("strPlayerName");
					this.OnstrPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkStatType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string fkStatType
		{
			get
			{
				return this._fkStatType;
			}
			set
			{
				if ((this._fkStatType != value))
				{
					this.OnfkStatTypeChanging(value);
					this.SendPropertyChanging();
					this._fkStatType = value;
					this.SendPropertyChanged("fkStatType");
					this.OnfkStatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLogicArgument", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string strLogicArgument
		{
			get
			{
				return this._strLogicArgument;
			}
			set
			{
				if ((this._strLogicArgument != value))
				{
					this.OnstrLogicArgumentChanging(value);
					this.SendPropertyChanging();
					this._strLogicArgument = value;
					this.SendPropertyChanged("strLogicArgument");
					this.OnstrLogicArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decArgumentValue", DbType="Decimal(18,0) NOT NULL")]
		public decimal decArgumentValue
		{
			get
			{
				return this._decArgumentValue;
			}
			set
			{
				if ((this._decArgumentValue != value))
				{
					this.OndecArgumentValueChanging(value);
					this.SendPropertyChanging();
					this._decArgumentValue = value;
					this.SendPropertyChanged("decArgumentValue");
					this.OndecArgumentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTimeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime datDateTimeCreated
		{
			get
			{
				return this._datDateTimeCreated;
			}
			set
			{
				if ((this._datDateTimeCreated != value))
				{
					this.OndatDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._datDateTimeCreated = value;
					this.SendPropertyChanged("datDateTimeCreated");
					this.OndatDateTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decMoneyWager", DbType="Money NOT NULL")]
		public decimal decMoneyWager
		{
			get
			{
				return this._decMoneyWager;
			}
			set
			{
				if ((this._decMoneyWager != value))
				{
					this.OndecMoneyWagerChanging(value);
					this.SendPropertyChanging();
					this._decMoneyWager = value;
					this.SendPropertyChanged("decMoneyWager");
					this.OndecMoneyWagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnBetIsOpened", DbType="Bit NOT NULL")]
		public bool blnBetIsOpened
		{
			get
			{
				return this._blnBetIsOpened;
			}
			set
			{
				if ((this._blnBetIsOpened != value))
				{
					this.OnblnBetIsOpenedChanging(value);
					this.SendPropertyChanging();
					this._blnBetIsOpened = value;
					this.SendPropertyChanged("blnBetIsOpened");
					this.OnblnBetIsOpenedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTeamBets")]
	public partial class tblTeamBet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkBetId;
		
		private int _fkCreatorUserId;
		
		private int _intWeekNumber;
		
		private string _strTeam;
		
		private string _fkStatType;
		
		private string _strLogicArgument;
		
		private decimal _decArgumentValue;
		
		private System.Nullable<System.DateTime> _datDateTimeCreated;
		
		private decimal _decMoneyWager;
		
		private bool _blnBetIsOpened;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkBetIdChanging(int value);
    partial void OnpkBetIdChanged();
    partial void OnfkCreatorUserIdChanging(int value);
    partial void OnfkCreatorUserIdChanged();
    partial void OnintWeekNumberChanging(int value);
    partial void OnintWeekNumberChanged();
    partial void OnstrTeamChanging(string value);
    partial void OnstrTeamChanged();
    partial void OnfkStatTypeChanging(string value);
    partial void OnfkStatTypeChanged();
    partial void OnstrLogicArgumentChanging(string value);
    partial void OnstrLogicArgumentChanged();
    partial void OndecArgumentValueChanging(decimal value);
    partial void OndecArgumentValueChanged();
    partial void OndatDateTimeCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndatDateTimeCreatedChanged();
    partial void OndecMoneyWagerChanging(decimal value);
    partial void OndecMoneyWagerChanged();
    partial void OnblnBetIsOpenedChanging(bool value);
    partial void OnblnBetIsOpenedChanged();
    #endregion
		
		public tblTeamBet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkBetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkBetId
		{
			get
			{
				return this._pkBetId;
			}
			set
			{
				if ((this._pkBetId != value))
				{
					this.OnpkBetIdChanging(value);
					this.SendPropertyChanging();
					this._pkBetId = value;
					this.SendPropertyChanged("pkBetId");
					this.OnpkBetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkCreatorUserId", DbType="Int NOT NULL")]
		public int fkCreatorUserId
		{
			get
			{
				return this._fkCreatorUserId;
			}
			set
			{
				if ((this._fkCreatorUserId != value))
				{
					this.OnfkCreatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkCreatorUserId = value;
					this.SendPropertyChanged("fkCreatorUserId");
					this.OnfkCreatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intWeekNumber", DbType="Int NOT NULL")]
		public int intWeekNumber
		{
			get
			{
				return this._intWeekNumber;
			}
			set
			{
				if ((this._intWeekNumber != value))
				{
					this.OnintWeekNumberChanging(value);
					this.SendPropertyChanging();
					this._intWeekNumber = value;
					this.SendPropertyChanged("intWeekNumber");
					this.OnintWeekNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTeam", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string strTeam
		{
			get
			{
				return this._strTeam;
			}
			set
			{
				if ((this._strTeam != value))
				{
					this.OnstrTeamChanging(value);
					this.SendPropertyChanging();
					this._strTeam = value;
					this.SendPropertyChanged("strTeam");
					this.OnstrTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkStatType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string fkStatType
		{
			get
			{
				return this._fkStatType;
			}
			set
			{
				if ((this._fkStatType != value))
				{
					this.OnfkStatTypeChanging(value);
					this.SendPropertyChanging();
					this._fkStatType = value;
					this.SendPropertyChanged("fkStatType");
					this.OnfkStatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLogicArgument", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string strLogicArgument
		{
			get
			{
				return this._strLogicArgument;
			}
			set
			{
				if ((this._strLogicArgument != value))
				{
					this.OnstrLogicArgumentChanging(value);
					this.SendPropertyChanging();
					this._strLogicArgument = value;
					this.SendPropertyChanged("strLogicArgument");
					this.OnstrLogicArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decArgumentValue", DbType="Decimal(18,0) NOT NULL")]
		public decimal decArgumentValue
		{
			get
			{
				return this._decArgumentValue;
			}
			set
			{
				if ((this._decArgumentValue != value))
				{
					this.OndecArgumentValueChanging(value);
					this.SendPropertyChanging();
					this._decArgumentValue = value;
					this.SendPropertyChanged("decArgumentValue");
					this.OndecArgumentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTimeCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> datDateTimeCreated
		{
			get
			{
				return this._datDateTimeCreated;
			}
			set
			{
				if ((this._datDateTimeCreated != value))
				{
					this.OndatDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._datDateTimeCreated = value;
					this.SendPropertyChanged("datDateTimeCreated");
					this.OndatDateTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decMoneyWager", DbType="Money NOT NULL")]
		public decimal decMoneyWager
		{
			get
			{
				return this._decMoneyWager;
			}
			set
			{
				if ((this._decMoneyWager != value))
				{
					this.OndecMoneyWagerChanging(value);
					this.SendPropertyChanging();
					this._decMoneyWager = value;
					this.SendPropertyChanged("decMoneyWager");
					this.OndecMoneyWagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnBetIsOpened", DbType="Bit NOT NULL")]
		public bool blnBetIsOpened
		{
			get
			{
				return this._blnBetIsOpened;
			}
			set
			{
				if ((this._blnBetIsOpened != value))
				{
					this.OnblnBetIsOpenedChanging(value);
					this.SendPropertyChanging();
					this._blnBetIsOpened = value;
					this.SendPropertyChanged("blnBetIsOpened");
					this.OnblnBetIsOpenedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsersBettingStatistics")]
	public partial class tblUsersBettingStatistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkStatId;
		
		private int _fkUserId;
		
		private System.Nullable<int> _intNumberOfGamesWon;
		
		private System.Nullable<int> _intNumberOfGamesLost;
		
		private System.Nullable<float> _fltOverallWinningPercentage;
		
		private System.Nullable<float> _fltTeamWinPercentage;
		
		private System.Nullable<float> _fltPlayerWinPercentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkStatIdChanging(int value);
    partial void OnpkStatIdChanged();
    partial void OnfkUserIdChanging(int value);
    partial void OnfkUserIdChanged();
    partial void OnintNumberOfGamesWonChanging(System.Nullable<int> value);
    partial void OnintNumberOfGamesWonChanged();
    partial void OnintNumberOfGamesLostChanging(System.Nullable<int> value);
    partial void OnintNumberOfGamesLostChanged();
    partial void OnfltOverallWinningPercentageChanging(System.Nullable<float> value);
    partial void OnfltOverallWinningPercentageChanged();
    partial void OnfltTeamWinPercentageChanging(System.Nullable<float> value);
    partial void OnfltTeamWinPercentageChanged();
    partial void OnfltPlayerWinPercentageChanging(System.Nullable<float> value);
    partial void OnfltPlayerWinPercentageChanged();
    #endregion
		
		public tblUsersBettingStatistic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkStatId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkStatId
		{
			get
			{
				return this._pkStatId;
			}
			set
			{
				if ((this._pkStatId != value))
				{
					this.OnpkStatIdChanging(value);
					this.SendPropertyChanging();
					this._pkStatId = value;
					this.SendPropertyChanged("pkStatId");
					this.OnpkStatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserId", DbType="Int NOT NULL")]
		public int fkUserId
		{
			get
			{
				return this._fkUserId;
			}
			set
			{
				if ((this._fkUserId != value))
				{
					this.OnfkUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkUserId = value;
					this.SendPropertyChanged("fkUserId");
					this.OnfkUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumberOfGamesWon", DbType="Int")]
		public System.Nullable<int> intNumberOfGamesWon
		{
			get
			{
				return this._intNumberOfGamesWon;
			}
			set
			{
				if ((this._intNumberOfGamesWon != value))
				{
					this.OnintNumberOfGamesWonChanging(value);
					this.SendPropertyChanging();
					this._intNumberOfGamesWon = value;
					this.SendPropertyChanged("intNumberOfGamesWon");
					this.OnintNumberOfGamesWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumberOfGamesLost", DbType="Int")]
		public System.Nullable<int> intNumberOfGamesLost
		{
			get
			{
				return this._intNumberOfGamesLost;
			}
			set
			{
				if ((this._intNumberOfGamesLost != value))
				{
					this.OnintNumberOfGamesLostChanging(value);
					this.SendPropertyChanging();
					this._intNumberOfGamesLost = value;
					this.SendPropertyChanged("intNumberOfGamesLost");
					this.OnintNumberOfGamesLostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fltOverallWinningPercentage", DbType="Real")]
		public System.Nullable<float> fltOverallWinningPercentage
		{
			get
			{
				return this._fltOverallWinningPercentage;
			}
			set
			{
				if ((this._fltOverallWinningPercentage != value))
				{
					this.OnfltOverallWinningPercentageChanging(value);
					this.SendPropertyChanging();
					this._fltOverallWinningPercentage = value;
					this.SendPropertyChanged("fltOverallWinningPercentage");
					this.OnfltOverallWinningPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fltTeamWinPercentage", DbType="Real")]
		public System.Nullable<float> fltTeamWinPercentage
		{
			get
			{
				return this._fltTeamWinPercentage;
			}
			set
			{
				if ((this._fltTeamWinPercentage != value))
				{
					this.OnfltTeamWinPercentageChanging(value);
					this.SendPropertyChanging();
					this._fltTeamWinPercentage = value;
					this.SendPropertyChanged("fltTeamWinPercentage");
					this.OnfltTeamWinPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fltPlayerWinPercentage", DbType="Real")]
		public System.Nullable<float> fltPlayerWinPercentage
		{
			get
			{
				return this._fltPlayerWinPercentage;
			}
			set
			{
				if ((this._fltPlayerWinPercentage != value))
				{
					this.OnfltPlayerWinPercentageChanging(value);
					this.SendPropertyChanging();
					this._fltPlayerWinPercentage = value;
					this.SendPropertyChanged("fltPlayerWinPercentage");
					this.OnfltPlayerWinPercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStatsBetSearchQueries")]
	public partial class tblStatsBetSearchQuery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkQueryId;
		
		private int _fkUserId;
		
		private bool _IsPlayerBetSearch;
		
		private string _strEntityName;
		
		private string _strStatArgument;
		
		private string _strLogicArgument;
		
		private System.Nullable<decimal> _strValueArgument;
		
		private System.Nullable<decimal> _decWagerAmount;
		
		private System.DateTime _datDateTimeCreated;
		
		private System.Guid _guidQuery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkQueryIdChanging(int value);
    partial void OnpkQueryIdChanged();
    partial void OnfkUserIdChanging(int value);
    partial void OnfkUserIdChanged();
    partial void OnIsPlayerBetSearchChanging(bool value);
    partial void OnIsPlayerBetSearchChanged();
    partial void OnstrEntityNameChanging(string value);
    partial void OnstrEntityNameChanged();
    partial void OnstrStatArgumentChanging(string value);
    partial void OnstrStatArgumentChanged();
    partial void OnstrLogicArgumentChanging(string value);
    partial void OnstrLogicArgumentChanged();
    partial void OnstrValueArgumentChanging(System.Nullable<decimal> value);
    partial void OnstrValueArgumentChanged();
    partial void OndecWagerAmountChanging(System.Nullable<decimal> value);
    partial void OndecWagerAmountChanged();
    partial void OndatDateTimeCreatedChanging(System.DateTime value);
    partial void OndatDateTimeCreatedChanged();
    partial void OnguidQueryChanging(System.Guid value);
    partial void OnguidQueryChanged();
    #endregion
		
		public tblStatsBetSearchQuery()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkQueryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkQueryId
		{
			get
			{
				return this._pkQueryId;
			}
			set
			{
				if ((this._pkQueryId != value))
				{
					this.OnpkQueryIdChanging(value);
					this.SendPropertyChanging();
					this._pkQueryId = value;
					this.SendPropertyChanged("pkQueryId");
					this.OnpkQueryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserId", DbType="Int NOT NULL")]
		public int fkUserId
		{
			get
			{
				return this._fkUserId;
			}
			set
			{
				if ((this._fkUserId != value))
				{
					this.OnfkUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkUserId = value;
					this.SendPropertyChanged("fkUserId");
					this.OnfkUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlayerBetSearch", DbType="Bit NOT NULL")]
		public bool IsPlayerBetSearch
		{
			get
			{
				return this._IsPlayerBetSearch;
			}
			set
			{
				if ((this._IsPlayerBetSearch != value))
				{
					this.OnIsPlayerBetSearchChanging(value);
					this.SendPropertyChanging();
					this._IsPlayerBetSearch = value;
					this.SendPropertyChanged("IsPlayerBetSearch");
					this.OnIsPlayerBetSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEntityName", DbType="NVarChar(100)")]
		public string strEntityName
		{
			get
			{
				return this._strEntityName;
			}
			set
			{
				if ((this._strEntityName != value))
				{
					this.OnstrEntityNameChanging(value);
					this.SendPropertyChanging();
					this._strEntityName = value;
					this.SendPropertyChanged("strEntityName");
					this.OnstrEntityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strStatArgument", DbType="NVarChar(100)")]
		public string strStatArgument
		{
			get
			{
				return this._strStatArgument;
			}
			set
			{
				if ((this._strStatArgument != value))
				{
					this.OnstrStatArgumentChanging(value);
					this.SendPropertyChanging();
					this._strStatArgument = value;
					this.SendPropertyChanged("strStatArgument");
					this.OnstrStatArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLogicArgument", DbType="NVarChar(100)")]
		public string strLogicArgument
		{
			get
			{
				return this._strLogicArgument;
			}
			set
			{
				if ((this._strLogicArgument != value))
				{
					this.OnstrLogicArgumentChanging(value);
					this.SendPropertyChanging();
					this._strLogicArgument = value;
					this.SendPropertyChanged("strLogicArgument");
					this.OnstrLogicArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValueArgument", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> strValueArgument
		{
			get
			{
				return this._strValueArgument;
			}
			set
			{
				if ((this._strValueArgument != value))
				{
					this.OnstrValueArgumentChanging(value);
					this.SendPropertyChanging();
					this._strValueArgument = value;
					this.SendPropertyChanged("strValueArgument");
					this.OnstrValueArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decWagerAmount", DbType="Money")]
		public System.Nullable<decimal> decWagerAmount
		{
			get
			{
				return this._decWagerAmount;
			}
			set
			{
				if ((this._decWagerAmount != value))
				{
					this.OndecWagerAmountChanging(value);
					this.SendPropertyChanging();
					this._decWagerAmount = value;
					this.SendPropertyChanged("decWagerAmount");
					this.OndecWagerAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTimeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime datDateTimeCreated
		{
			get
			{
				return this._datDateTimeCreated;
			}
			set
			{
				if ((this._datDateTimeCreated != value))
				{
					this.OndatDateTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._datDateTimeCreated = value;
					this.SendPropertyChanged("datDateTimeCreated");
					this.OndatDateTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guidQuery", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid guidQuery
		{
			get
			{
				return this._guidQuery;
			}
			set
			{
				if ((this._guidQuery != value))
				{
					this.OnguidQueryChanging(value);
					this.SendPropertyChanging();
					this._guidQuery = value;
					this.SendPropertyChanged("guidQuery");
					this.OnguidQueryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStatsPageVisits")]
	public partial class tblStatsPageVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pkVisitId;
		
		private int _fkUserId;
		
		private string _strBaseUrlVisited;
		
		private int _strQueryStringValue;
		
		private System.DateTime _datDateTimeVisited;
		
		private bool _blnIsTeamBet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkVisitIdChanging(int value);
    partial void OnpkVisitIdChanged();
    partial void OnfkUserIdChanging(int value);
    partial void OnfkUserIdChanged();
    partial void OnstrBaseUrlVisitedChanging(string value);
    partial void OnstrBaseUrlVisitedChanged();
    partial void OnstrQueryStringValueChanging(int value);
    partial void OnstrQueryStringValueChanged();
    partial void OndatDateTimeVisitedChanging(System.DateTime value);
    partial void OndatDateTimeVisitedChanged();
    partial void OnblnIsTeamBetChanging(bool value);
    partial void OnblnIsTeamBetChanged();
    #endregion
		
		public tblStatsPageVisit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pkVisitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pkVisitId
		{
			get
			{
				return this._pkVisitId;
			}
			set
			{
				if ((this._pkVisitId != value))
				{
					this.OnpkVisitIdChanging(value);
					this.SendPropertyChanging();
					this._pkVisitId = value;
					this.SendPropertyChanged("pkVisitId");
					this.OnpkVisitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkUserId", DbType="Int NOT NULL")]
		public int fkUserId
		{
			get
			{
				return this._fkUserId;
			}
			set
			{
				if ((this._fkUserId != value))
				{
					this.OnfkUserIdChanging(value);
					this.SendPropertyChanging();
					this._fkUserId = value;
					this.SendPropertyChanged("fkUserId");
					this.OnfkUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strBaseUrlVisited", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string strBaseUrlVisited
		{
			get
			{
				return this._strBaseUrlVisited;
			}
			set
			{
				if ((this._strBaseUrlVisited != value))
				{
					this.OnstrBaseUrlVisitedChanging(value);
					this.SendPropertyChanging();
					this._strBaseUrlVisited = value;
					this.SendPropertyChanged("strBaseUrlVisited");
					this.OnstrBaseUrlVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strQueryStringValue", DbType="Int NOT NULL")]
		public int strQueryStringValue
		{
			get
			{
				return this._strQueryStringValue;
			}
			set
			{
				if ((this._strQueryStringValue != value))
				{
					this.OnstrQueryStringValueChanging(value);
					this.SendPropertyChanging();
					this._strQueryStringValue = value;
					this.SendPropertyChanged("strQueryStringValue");
					this.OnstrQueryStringValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datDateTimeVisited", DbType="DateTime NOT NULL")]
		public System.DateTime datDateTimeVisited
		{
			get
			{
				return this._datDateTimeVisited;
			}
			set
			{
				if ((this._datDateTimeVisited != value))
				{
					this.OndatDateTimeVisitedChanging(value);
					this.SendPropertyChanging();
					this._datDateTimeVisited = value;
					this.SendPropertyChanged("datDateTimeVisited");
					this.OndatDateTimeVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnIsTeamBet", DbType="Bit NOT NULL")]
		public bool blnIsTeamBet
		{
			get
			{
				return this._blnIsTeamBet;
			}
			set
			{
				if ((this._blnIsTeamBet != value))
				{
					this.OnblnIsTeamBetChanging(value);
					this.SendPropertyChanging();
					this._blnIsTeamBet = value;
					this.SendPropertyChanged("blnIsTeamBet");
					this.OnblnIsTeamBetChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
